# Generated by Django 5.0.7 on 2024-07-31 09:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Amulet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'first_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('first_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'second_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('second_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'third_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('third_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'fourth_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('fourth_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'set_name',
                    models.CharField(
                        choices=[
                            ('tempered will', 'Tempered Will'),
                            ("hell's lament", "Hell's Lament"),
                            ('unshaken will', 'Unshaken Will'),
                            ('morale', 'Morale'),
                            ('infernal roar', 'Infernal Roar'),
                            ('soulbound arcana', 'Soulbound Arcana'),
                            ('invigoration', 'Invigoration'),
                            ('ageless wrath', 'Ageless Wrath'),
                            ('asclepius', 'Asclepius'),
                            ('the insight', 'The Insight'),
                            ('the wisdom', 'The Wisdom'),
                            ('the doom', 'The Doom'),
                            ('the styx', 'The Styx'),
                            ('night terror', 'Night Terror'),
                            ('the glacier', 'The Glacier'),
                            ('hawk eye', 'Hawk Eye'),
                            ('mana spring', 'Mana Spring'),
                            ('fracture', 'Fracture'),
                            ('curse', 'Curse'),
                            ('fatality', 'Fatality'),
                            ('guardian', 'Guardian'),
                            ('occult shield', 'Occult Shield'),
                            ('twisted blade', 'Twisted Blade'),
                            ('rapidity', 'Rapidity'),
                            ('the tempest', 'The Tempest'),
                        ],
                        default='the tempest',
                        max_length=18,
                    ),
                ),
                (
                    'main_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=16,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chestplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'first_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('first_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'second_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('second_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'third_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('third_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'fourth_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('fourth_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'set_name',
                    models.CharField(
                        choices=[
                            ("light's grace", "Light's Grace"),
                            ('wicked vengeance', 'Wicker Vengeance'),
                            ('immortal warrior', 'Immortal Warrior'),
                            ('warlord', 'Warlord'),
                            ('salvation', 'Salvation'),
                            ('life force', 'Life Force'),
                            ('calamity', 'Calamity'),
                            ('whirlwind', 'Whirlwind'),
                            ('annihilating might', 'Annihilating Might'),
                            ('lifegiver', 'Lifegiver'),
                            ('iron fortress', 'Iron Fortress'),
                            ('wrathful onslaught', 'Wrathful Onslaught'),
                            ('savage strike', 'Savage Strike'),
                            ('deadly aim', 'Deadly Aim'),
                            ('vitality', 'Vitality'),
                            ('juggernaut', 'Juggernaut'),
                        ],
                        default='calamity',
                        max_length=18,
                    ),
                ),
                ('main_stat', models.CharField(default='pv', editable=False, max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DamageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'dmg_type',
                    models.CharField(
                        choices=[('Piercing', 'Piercing'), ('Magic', 'Magic'), ('Normal', 'Normal')],
                        default='Normal',
                        max_length=8,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'faction',
                    models.CharField(
                        choices=[
                            ('Watcher', 'Watcher'),
                            ('North', 'North'),
                            ('Nightmare', 'Nightmare'),
                            ('Curse', 'Curse'),
                            ('Infernal', 'Infernal'),
                            ('Piercer', 'Piercer'),
                            ('Esoteric', 'Esoteric'),
                            ('Chaos Dominion', 'Chaos_Dominion'),
                            ('Unnamable', 'Unnamable'),
                        ],
                        default='Watcher',
                        max_length=15,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='HeroClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'heroclass',
                    models.CharField(
                        choices=[
                            ('Fighter', 'Fighter'),
                            ('Mage', 'Mage'),
                            ('Marksman', 'Marksman'),
                            ('Healer', 'Healer'),
                            ('Defender', 'Defender'),
                        ],
                        default='Fighter',
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'rarity',
                    models.CharField(
                        choices=[('Rare', 'Rare'), ('Epic', 'Epic'), ('Legendary', 'Legendary')],
                        default='Rare',
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Ring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'first_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('first_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'second_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('second_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'third_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('third_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'fourth_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('fourth_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'set_name',
                    models.CharField(
                        choices=[
                            ('tempered will', 'Tempered Will'),
                            ("hell's lament", "Hell's Lament"),
                            ('unshaken will', 'Unshaken Will'),
                            ('morale', 'Morale'),
                            ('infernal roar', 'Infernal Roar'),
                            ('soulbound arcana', 'Soulbound Arcana'),
                            ('invigoration', 'Invigoration'),
                            ('ageless wrath', 'Ageless Wrath'),
                            ('asclepius', 'Asclepius'),
                            ('the insight', 'The Insight'),
                            ('the wisdom', 'The Wisdom'),
                            ('the doom', 'The Doom'),
                            ('the styx', 'The Styx'),
                            ('night terror', 'Night Terror'),
                            ('the glacier', 'The Glacier'),
                            ('hawk eye', 'Hawk Eye'),
                            ('mana spring', 'Mana Spring'),
                            ('fracture', 'Fracture'),
                            ('curse', 'Curse'),
                            ('fatality', 'Fatality'),
                            ('guardian', 'Guardian'),
                            ('occult shield', 'Occult Shield'),
                            ('twisted blade', 'Twisted Blade'),
                            ('rapidity', 'Rapidity'),
                            ('the tempest', 'The Tempest'),
                        ],
                        default='the tempest',
                        max_length=18,
                    ),
                ),
                (
                    'main_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                        ],
                        default='atq',
                        max_length=16,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'first_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('first_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'second_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('second_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'third_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('third_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'fourth_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('fourth_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'set_name',
                    models.CharField(
                        choices=[
                            ("light's grace", "Light's Grace"),
                            ('wicked vengeance', 'Wicker Vengeance'),
                            ('immortal warrior', 'Immortal Warrior'),
                            ('warlord', 'Warlord'),
                            ('salvation', 'Salvation'),
                            ('life force', 'Life Force'),
                            ('calamity', 'Calamity'),
                            ('whirlwind', 'Whirlwind'),
                            ('annihilating might', 'Annihilating Might'),
                            ('lifegiver', 'Lifegiver'),
                            ('iron fortress', 'Iron Fortress'),
                            ('wrathful onslaught', 'Wrathful Onslaught'),
                            ('savage strike', 'Savage Strike'),
                            ('deadly aim', 'Deadly Aim'),
                            ('vitality', 'Vitality'),
                            ('juggernaut', 'Juggernaut'),
                        ],
                        default='calamity',
                        max_length=18,
                    ),
                ),
                ('main_stat', models.CharField(default='atq', editable=False, max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wristband',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'first_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('first_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'second_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('second_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'third_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('third_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'fourth_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('rage regen', 'rage regen'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                            ('vit atq', 'vit atq'),
                        ],
                        default='atq',
                        max_length=15,
                    ),
                ),
                ('fourth_stat_value', models.FloatField(blank=True, null=True)),
                (
                    'set_name',
                    models.CharField(
                        choices=[
                            ('tempered will', 'Tempered Will'),
                            ("hell's lament", "Hell's Lament"),
                            ('unshaken will', 'Unshaken Will'),
                            ('morale', 'Morale'),
                            ('infernal roar', 'Infernal Roar'),
                            ('soulbound arcana', 'Soulbound Arcana'),
                            ('invigoration', 'Invigoration'),
                            ('ageless wrath', 'Ageless Wrath'),
                            ('asclepius', 'Asclepius'),
                            ('the insight', 'The Insight'),
                            ('the wisdom', 'The Wisdom'),
                            ('the doom', 'The Doom'),
                            ('the styx', 'The Styx'),
                            ('night terror', 'Night Terror'),
                            ('the glacier', 'The Glacier'),
                            ('hawk eye', 'Hawk Eye'),
                            ('mana spring', 'Mana Spring'),
                            ('fracture', 'Fracture'),
                            ('curse', 'Curse'),
                            ('fatality', 'Fatality'),
                            ('guardian', 'Guardian'),
                            ('occult shield', 'Occult Shield'),
                            ('twisted blade', 'Twisted Blade'),
                            ('rapidity', 'Rapidity'),
                            ('the tempest', 'The Tempest'),
                        ],
                        default='the tempest',
                        max_length=18,
                    ),
                ),
                (
                    'main_stat',
                    models.CharField(
                        choices=[
                            ('atq', 'Atq'),
                            ('def', 'Def'),
                            ('pv', 'Pv'),
                            ('atq bonus', 'Atq bonus'),
                            ('def bonus', 'def bonus'),
                            ('pv bonus', 'pv bonus'),
                            ('crit rate', 'crit rate'),
                            ('crit dmg', 'crit dmg'),
                            ('heal effect', 'heal effect'),
                        ],
                        default='atq',
                        max_length=16,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('health', models.IntegerField(default=0)),
                ('attack', models.IntegerField(default=0)),
                ('defense', models.IntegerField(default=0)),
                ('mRes', models.IntegerField(default=0)),
                ('cost', models.IntegerField(default=0)),
                ('block', models.IntegerField(default=0)),
                ('revival_time', models.IntegerField(default=60)),
                ('attack_interval', models.FloatField(default=2.6)),
                ('crit_dmg', models.IntegerField(default=150)),
                ('attack_speed', models.IntegerField(default=100)),
                ('rage_regen_auto', models.IntegerField(default=0)),
                (
                    'amulet',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wor.amulet'
                    ),
                ),
                (
                    'chestplate',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wor.chestplate'
                    ),
                ),
                ('damagetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wor.damagetype')),
                ('faction', models.ManyToManyField(to='wor.faction')),
                ('heroclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wor.heroclass')),
                ('rarity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wor.rarity')),
                (
                    'ring',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wor.ring'
                    ),
                ),
                (
                    'weapon',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wor.weapon'
                    ),
                ),
                (
                    'wristband',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wor.wristband'
                    ),
                ),
            ],
        ),
    ]
